@page
@model LibraryManagement_WebApp.Pages.UserPage.BooksModel
@{
    ViewData["Title"] = "Danh sách sách";
    Layout = "_UserLayout";
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <h2 class="mb-3">Danh sách sách</h2>
            
            <!-- Search and Filter Form -->
            <div class="card mb-4">
                <div class="card-body">
                    <form method="get" class="row g-3" id="searchForm">
                        <div class="col-md-10">
                            <label class="form-label">
                                <i class="bi bi-search"></i> Tìm kiếm sách
                            </label>
                            <input type="text" name="SearchKeyword" class="form-control" 
                                   placeholder="Nhập tên sách, tác giả, thể loại hoặc mô tả..." value="@Model.SearchKeyword" 
                                   onkeypress="handleEnterKey(event)">
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">&nbsp;</label>
                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-search"></i> Tìm kiếm
                                </button>
                                @if (!string.IsNullOrEmpty(Model.SearchKeyword))
                                {
                                    <a href="/UserPage/Books" class="btn btn-outline-secondary btn-sm">
                                        <i class="bi bi-x-circle"></i> Xóa
                                    </a>
                                }
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Search Results Summary -->
    @if (!string.IsNullOrEmpty(Model.SearchKeyword))
    {
        <div class="row mb-3">
            <div class="col-12">
                <div class="alert alert-info d-flex align-items-center">
                    <i class="bi bi-info-circle me-2"></i>
                    <div>
                        <strong>Kết quả tìm kiếm:</strong> 
                        Tìm thấy @(Model.Books?.Count ?? 0) sách cho từ khóa "<em>@Model.SearchKeyword</em>"
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Books Grid -->
    <div class="row" id="booksGrid">
        @if (Model.Books != null && Model.Books.Any())
        {
            @foreach (var book in Model.Books)
            {
                <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                    <div class="card h-100 shadow-sm">
                        <img src="@(string.IsNullOrEmpty(book.ImageUrl) ? "/images/default-book.jpg" : book.ImageUrl)" 
                             class="card-img-top" alt="@book.Title" style="height: 200px; object-fit: cover;">
                        <div class="card-body d-flex flex-column">
                            <h6 class="card-title">@book.Title</h6>
                            <p class="card-text text-muted small">
                                <i class="bi bi-person"></i> @(book.Author?.AuthorName ?? "N/A")
                            </p>
                            <p class="card-text text-muted small">
                                <i class="bi bi-tag"></i> @(book.Category?.CategoryName ?? "N/A")
                            </p>
                            <div class="mt-auto">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <span class="badge @(book.Available > 0 ? "bg-success" : "bg-danger")">
                                        @(book.Available > 0 ? "Có sẵn" : "Hết sách")
                                    </span>
                                    <small class="text-muted">@book.Available/@book.Quantity</small>
                                </div>
                                <a href="/UserPage/BookDetail/@book.BookId" class="btn btn-outline-primary btn-sm w-100">
                                    <i class="bi bi-eye"></i> Xem chi tiết
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="text-center py-5">
                    @if (!string.IsNullOrEmpty(Model.SearchKeyword))
                    {
                        <i class="bi bi-search display-1 text-muted"></i>
                        <h4 class="mt-3">Không tìm thấy sách nào</h4>
                        <p class="text-muted">Không có sách nào phù hợp với từ khóa "<strong>@Model.SearchKeyword</strong>"</p>
                        <div class="mt-3">
                            <a href="/UserPage/Books" class="btn btn-primary">
                                <i class="bi bi-arrow-left"></i> Xem tất cả sách
                            </a>
                            <button type="button" class="btn btn-outline-secondary ms-2" onclick="clearSearch()">
                                <i class="bi bi-x-circle"></i> Xóa tìm kiếm
                            </button>
                        </div>
                    }
                    else
                    {
                        <i class="bi bi-book display-1 text-muted"></i>
                        <h4 class="mt-3">Thư viện hiện chưa có sách nào</h4>
                        <p class="text-muted">Hãy quay lại sau để xem các sách mới</p>
                    }
                </div>
            </div>
        }
    </div>
</div>

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
}

@section Scripts {
    <script>
        // Handle Enter key in search input
        function handleEnterKey(event) {
            if (event.key === 'Enter') {
                event.preventDefault();
                console.log('Search submitted via Enter key');
                document.getElementById('searchForm').submit();
            }
        }
        
        // Clear search function
        function clearSearch() {
            // Clear search input
            document.querySelector('input[name="SearchKeyword"]').value = '';
            
            console.log('Search cleared, resubmitting form');
            document.getElementById('searchForm').submit();
        }
        
        // Add loading state when form is submitted
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('searchForm');
            const submitBtn = form.querySelector('button[type="submit"]');
            const booksGrid = document.getElementById('booksGrid');
            
            form.addEventListener('submit', function() {
                // Show loading state
                submitBtn.innerHTML = '<i class="bi bi-hourglass-split"></i> Đang tìm...';
                submitBtn.disabled = true;
                
                // Add loading overlay to books grid
                booksGrid.style.opacity = '0.5';
                booksGrid.style.pointerEvents = 'none';
                
                console.log('Search form submitted with loading state');
            });
        });
        
        // Real-time search with debounce
        let searchTimeout;
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.querySelector('input[name="SearchKeyword"]');
            
            searchInput.addEventListener('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(function() {
                    if (searchInput.value.length >= 3 || searchInput.value.length === 0) {
                        console.log('Auto-search triggered for:', searchInput.value);
                        document.getElementById('searchForm').submit();
                    }
                }, 1500); // 1.5 second delay
            });
        });
    </script>
} 