@page
@model LibraryManagement_WebApp.Pages.UserPage.DebugModel
@{
    ViewData["Title"] = "Debug Page";
    Layout = "_UserLayout";
}

<div class="container-fluid py-4">
    <h2>Debug Information</h2>
    
    <div class="card mb-3">
        <div class="card-header">
            <h5>Session Info</h5>
        </div>
        <div class="card-body">
            <p><strong>User ID:</strong> @Model.SessionUserId</p>
            <p><strong>JWT Token:</strong> @(string.IsNullOrEmpty(Model.SessionToken) ? "Not found" : "Found")</p>
            <p><strong>User Role:</strong> @Model.SessionRole</p>
        </div>
    </div>

    <div class="card mb-3">
        <div class="card-header">
            <h5>Test Borrow API</h5>
        </div>
        <div class="card-body">
            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div class="alert alert-@Model.MessageType">
                    @Model.Message
                </div>
            }
            
            <form method="post">
                <div class="mb-3">
                    <label>Book ID to borrow:</label>
                    <input type="number" asp-for="TestBookId" class="form-control" value="1" />
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <button type="submit" asp-page-handler="TestBorrow" class="btn btn-primary w-100">
                            <i class="bi bi-plus-circle"></i> Test Borrow
                        </button>
                    </div>
                    <div class="col-md-4">
                        @if (Model.CurrentBorrows.Any())
                        {
                            <button type="submit" asp-page-handler="TestExtend" class="btn btn-warning w-100">
                                <i class="bi bi-clock"></i> Test Extend<br>
                                <small>(BorrowId: @Model.CurrentBorrows.First().BorrowId)</small>
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-secondary w-100" disabled>
                                <i class="bi bi-clock"></i> Test Extend<br>
                                <small>(No borrows)</small>
                            </button>
                        }
                    </div>
                    <div class="col-md-4">
                        @if (Model.CurrentBorrows.Any())
                        {
                            <button type="submit" asp-page-handler="TestReturn" class="btn btn-success w-100">
                                <i class="bi bi-check-circle"></i> Test Return<br>
                                <small>(BorrowId: @Model.CurrentBorrows.First().BorrowId)</small>
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-secondary w-100" disabled>
                                <i class="bi bi-check-circle"></i> Test Return<br>
                                <small>(No borrows)</small>
                            </button>
                        }
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <h5>Current Borrows</h5>
        </div>
        <div class="card-body">
            @if (Model.CurrentBorrows.Any())
            {
                <table class="table table-sm">
                    <thead>
                        <tr>
                            <th>BorrowId</th>
                            <th>Book</th>
                            <th>Borrow Date</th>
                            <th>Due Date</th>
                            <th>Extend Count</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var borrow in Model.CurrentBorrows)
                        {
                            var daysRemaining = (borrow.DueDate - DateTime.Now).Days;
                            var statusClass = daysRemaining < 0 ? "text-danger" : daysRemaining <= 3 ? "text-warning" : "text-success";
                            
                            <tr>
                                <td>@borrow.BorrowId</td>
                                <td>@borrow.Book?.Title</td>
                                <td>@borrow.BorrowDate.ToString("dd/MM/yyyy")</td>
                                <td class="@statusClass">
                                    @borrow.DueDate.ToString("dd/MM/yyyy")
                                    <br><small>(@daysRemaining ng√†y)</small>
                                </td>
                                <td>@borrow.ExtendCount/2</td>
                                <td>
                                    <span class="badge bg-primary">@borrow.Status</span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>No current borrows</p>
            }
        </div>
    </div>
</div>

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
} 